name: Build and Push Docker image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
      
    - name: Rename env vars file
      run: mv .env.example .env
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Get commit hash
      id: vars
      run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Build Postgres Docker image
      run: |
        docker build -t ${{ vars.DOCKERHUB_PROJECT }}:postgres-${{ env.COMMIT_HASH }} ./postgres

    - name: Build Backend Docker image
      run: |
        docker build -t ${{ vars.DOCKERHUB_PROJECT }}:backend-${{ env.COMMIT_HASH }} ./backend

    - name: Build Frontend Docker image
      run: |
        docker build -t ${{ vars.DOCKERHUB_PROJECT }}:frontend-${{ env.COMMIT_HASH }} ./frontend

    - name: Create Docker network
      run: |
        docker network create ci_network || true

    - name: Run PostgreSQL container
      run: |
        docker run -d \
          --name postgres \
          --network ci_network \
          --env-file .env \
          ${{ vars.DOCKERHUB_PROJECT }}:postgres-${{ env.COMMIT_HASH }}

    - name: Wait for PostgreSQL to be ready
      run: |
        echo "Waiting for PostgreSQL to be ready..."
        for i in {1..30}; do
          if docker exec postgres pg_isready -U postgres; then
            echo "PostgreSQL is ready"
            break
          fi
          sleep 2
        done

    - name: Run Backend container
      run: |
        docker run -d \
          --name backend \
          --network ci_network \
          --env-file .env \
          ${{ vars.DOCKERHUB_PROJECT }}:backend-${{ env.COMMIT_HASH }}

    - name: Wait for Backend to be ready
      run: |
        echo "Waiting for Backend to be ready..."
        for i in {1..30}; do
          if curl -s http://localhost:3000/health | grep "OK"; then
            echo "Backend is ready"
            break
          fi
          sleep 2
        done

    - name: Run Frontend container
      run: |
        docker run -d \
          --name frontend \
          --network ci_network \
          --env-file .env \
          ${{ vars.DOCKERHUB_PROJECT }}:frontend-${{ env.COMMIT_HASH }}

    - name: Wait for Frontend to be ready
      run: |
        echo "Waiting for Frontend to be ready..."
        for i in {1..30}; do
          if curl -s http://localhost:3001/health | grep "OK"; then
            echo "Backend is ready"
            break
          fi
          sleep 2
        done

    - name: Check running containers
      run: docker ps
    
    - name: Check bridge network
      run: docker network inspect bridge

    - name: Check Backend container logs
      run: docker logs backend

    - name: Check Postgres container logs
      run: docker logs postgres

    - name: Run curl test against Backend
      run: |
        echo "Testing the Backend service..."
        response=$(docker exec frontend curl -s http://backend:3000/tasks)
        echo "Response: $response"
        if [ "$response" != "[]" ]; then
          echo "Test failed: Expected response [] but got $response"
          exit 1
        fi
        echo "Test passed: Response is []"

    - name: Log in to Docker Hub
      if: github.event_name == 'push'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push to Docker Hub
      if: github.event_name == 'push'
      run: |
        docker push ${{ vars.DOCKERHUB_PROJECT }}:postgres-${{ env.COMMIT_HASH }}
        docker push ${{ vars.DOCKERHUB_PROJECT }}:backend-${{ env.COMMIT_HASH }}
        docker push ${{ vars.DOCKERHUB_PROJECT }}:frontend-${{ env.COMMIT_HASH }}
